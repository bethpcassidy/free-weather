Mon Jan 2nd



Nice Weather, an app that shows you the weather for a zip code, no adds fast responses and clean.


Functionality
- Users/session data
- Saved preset locations based on user (up to 3)
- Non-users can still look for weather
- search by zip code, weather pops up
- Image is pulled from assets to represent current conditions (sun for sunny, cloud for cloudy, etc)
- Users can have multiple saved forecast locations

Data
- forecast model
- user model
- saved forecasts
- api interpolation
- image model? Maybe image should be an integer to decide which picture is displayed based on conditionals the weather.


API
- open-meteo.com
- GFS
- converter from zip code to longitude and latitude, this might not need to be an api though I wonder if bootstrap has stuff for this in REACT, it really depends on if its easier to all be in my backend for organization reasons, (update: the term is geocoding, shouldn't be hard, I am using geocode.maps.co)

-----------

Backend
- Established an early version of a forecast model, going to make a form to take in a zip code
- API testing through get requests to decide what I am going to use
- Create functions to process the data and clean it up for presentation
- User model

------------------


JAN 3rd 2022

STATUS
- I've finished basic CRUD actions for the forecasts controller which has lead me to thinking about how other tables will interact with the forecast table overall. 
- I plan on creating assets for sunshine and snow and rain and pulling those up would be easiest in a separate table. 
- If I want to save location data while weather variables change over time, would it not be easiest to to have a location table where I can keep geocode information (no reason to ping the geocode api every time I want an updated forecast).
